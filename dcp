#!/bin/bash

function usage 
{
  echo -e "No ip address\nUsage: $(basename "$0") [-d] [-l] -i ip [-t localdir] [remotedir ... ]"
  printf "\t-l long format\n\t-d only list directories and files\n" 
  exit 1
}

while getopts ldi:t: opt; do
    case $opt in
        l) longformatopt=1
            ;;
        d) listdir=1
            ;;
        i) ip=$OPTARG
            ;;
        t) targetdir=$OPTARG
           cd "$targetdir" || exit 1
           ;;
    esac
done

[[ -z "$ip" ]] && usage

if [[ -z "$targetdir" ]]; then
  configdir=$(ddir -i "$ip"); 
  if [[ ! -z "$configdir" ]]; then
      cd "$configdir"  ||  exit 1; 
      [[ -z "$listdir" ]] &&  echo "Files downloaded to $(pwd)"
  else
     echo "Download directory not found in configuration for $ip"
     exit 1
  fi
fi 

shift "$((OPTIND-1))"

server=$(dserver -i "$ip")

function print_properties
{
  if [[ ! -z "$longformatopt" ]]; then
      [[ $listdir ]] && printf "%s %s admin admin %s %s\n" "$attr" "$(numfmt --to=iec "$(( $1 * 1000 ))" --padding=7)" "$timestamp" "${dprop[0]}"
    else
      [[ $listdir ]] && echo "${dprop[0]}"
  fi
}

function set_regex_pattern
{
  [[ -z $basename ]] && return

  pattern=${basename/\./\\.}  #substitute  . with \.
  pattern=${pattern//\*/.\*}  #            * with .* 
  pattern=${pattern//\?/.}    #            ? with .
}

function print_dir
{
  #format: var g_folderslistStr = GV("Picture;1;0;null;0;0;0;1514898228;0,Video;1;0;null;5;0;0;1515193747;0","")
  #format: var g_filelistStr = decodeURIComponent(GV("p1_20180104_090009.jpg;0;0;56;0;0;0;1515052811;0,
  
  set_regex_pattern

  readarray -d ',' list <<< "$1"

  for item in ${list[*]}; do

    IFS=";" read -r -d, -a dprop <<< "$item" 
    
    timestamp=$(date --date @"${dprop[7]}" +'%b %e %T')

    if [[ "${dprop[1]}" == "1" ]]; then
        attr="drwxrwxr--"
        print_properties dprop[3]
    else
        attr="-r--r--r--"
        if [[ ${dprop[0]} =~ $pattern ]]; then
          pagefiles+="http://$ip/cgi-bin/sddownload.cgi?file=$dir/${dprop[0]} "
          print_properties dprop[3]
        #Format: http://192.168.0.106/cgi-bin/sddownload.cgi?file=/video/20180103/00/p120180103_003150.mp4
        fi
    fi

  done

}

function print_dir_dcs-lig-httpd
{

  set_regex_pattern

  readarray -d '*' list <<< "$1"

  #timestamp=$(date +'%b %e %T') # No date available, use current time

    for item in ${list[*]}; do
      IFS=":" read -r -a dprop <<< "$item" 

    dprop[2]=${dprop[2]%\*} #strip off * suffix from file size

    if [[ "${dprop[1]}" == "d" ]]; then
          attr="drwxrwxr--"
          dprop[2]=0 # is -1
          timestamp=$(date -d"$dir ${dprop[0]}" +'%b %e %T') # No date available, infer from dir
          print_properties dprop[2]
      else
          attr="-r--r--r--"
          if [[  ${dprop[0]} =~ $pattern ]]; then
          #Fromat: http://192.168.0.110/cgi/admin/getSDFile.cgi?file=20180110_063000.mp4&path=DCS-936L/20180110/06/20180110_063000.mp4
            timestamp=$(date -d"${dprop[0]:0:8} ${dprop[0]:9:2}:${dprop[0]:11:2}:${dprop[0]:13:2}" +'%b %e %T') # no date avail., infer from basename
            pagefiles+="http://$ip/cgi/admin/getSDFile.cgi?file=${dprop[0]}&path=$product/$dir/${dprop[0]} "
            print_properties dprop[2]
          fi
      fi
      
    done
}

function parse_page
{
  totalpages=1
  currentpage=0

  pagefiles=

  until (( currentpage >= totalpages )); do
  
    ((currentpage++))
  
    if [[ $(dreq "http://$ip/cgi-bin/sdoperate.cgi?list=&path=$dir&page=$currentpage") == *"500 Internal Error"* ]]; then
      # Trying to access non-existent directory gives "500 Internal Error" response
  
        echo "Failed to open '$dir': 500 Internal Error"
          continue
      fi
    
      # file/dir-names for each page are embedded in variables inside Javascript <script>-tag

      # Use FD 10 for read for not interfering with read from stdin inside {}
      while read -r -u 10 line ; do

        [[ "$line" =~ ^var\ g_totalpage ]] &&       { IFS='"' read -r f1 totalpages f3 <<< "$line"; continue;  }
        [[ "$line" =~ ^var\ g_folderslistStr ]] &&  { IFS='"' read -r f1 folderslistStr f3 <<< "$line"; continue; }
        [[ "$line" =~ ^var\ g_filelistStr ]] &&     { IFS='"' read -r f1 filelistStr f3 <<< "$line"; break; }

      done 10< <(dreq "http://$ip/setup_sdlist.htm")

      print_dir "$folderslistStr"
      print_dir "$filelistStr"

      dirfiles+=$pagefiles 
    done
  }

  function parse_page_dcs-lig-httpd
  {
    totalpages=1
    currentpage=0
    sdfpp=100

    pagefiles=

    until (( currentpage >= totalpages )); do
    
      ((currentpage++))
    
      while read -r line ; do

      [[ "$line" =~ ^\<product\> ]] && { prefix=${line#<product>}; product=${prefix%</product>}; }
      [[ "$line" =~ ^\<totalpages\> ]] && { prefix=${line#<totalpages>}; totalpages=${prefix%</totalpages>}; }
      [[ "$line" =~ ^\<folderstring\> ]] && { prefix=${line#<folderstring>}; folderstring=${prefix%</folderstring>}; }

    done < <(dreq "http://$ip/eng/admin/adv_sdcard.cgi?folderpath=$dir&command=video&filesperpage=$sdfpp&currentpage=$currentpage")

    # Attempt to access non-existent directory gives 400 Bad request response
    [[ ! -z "$folderstring" ]] && print_dir_dcs-lig-httpd "$folderstring"

    dirfiles+=$pagefiles 
  done
}

dir=$1

case $server in
   
   Embedthis-Appweb*)

    [[ -z "$dir" ]] && set /
      
      sdfpp=3 #set 100 files pr page (100:sdfpp=3,50:sdfpp=2,20:sdfpp=1,10:sdfpp=0)

      dreq "http://$ip/cgi-bin/sdoperate.cgi?sdfpp=$sdfpp" >/dev/null 
      
      while (( "$#" )); do

        dir=$1

        dirfiles=

        [[ ! ${dir:0:1} == '/' ]] && dir=/$dir
        
        IFS='/' read -r d1 d2 d3 d4 basename <<< "$dir" 

        [[ ! -z $d2 ]] && dir=/$d2; [[ ! -z $d3 ]] && dir+=/$d3; [[ ! -z $d4 ]] && dir+=/$d4
        
        parse_page

        [[ ! -z $dirfiles && ! $listdir ]] && dreq -v --remote-header-name --remote-name-all $dirfiles

        shift;

    done

    ;;
    
    dcs-lig-httpd*)

    [[ -z "$dir" ]] && set ''

    while (( "$#" )); do

       dir=$1
        
       dirfiles=

       [[ ! ${dir:0:1} == '/'  ]] && dir=/$dir # Adding / at start allows IFS=/ to be used

       IFS='/' read -r d1 d2 d3 basename <<< "$dir"

        [[ -z $d2 ]] && dir= # No directory was specified on command line

        [[ ! -z $d2 ]] && dir=$d2;  [[ ! -z $d3 ]] && dir+=/$d3; [[ ! -z $d4 ]] && dir+=/$d4

        parse_page_dcs-lig-httpd

        [[ ! -z $dirfiles && ! $listdir ]] && dreq -v --remote-header-name --remote-name-all $dirfiles

        shift;

    done
   
    ;;

    *)

    echo -e "Server $server not supported"
    ;;
esac

